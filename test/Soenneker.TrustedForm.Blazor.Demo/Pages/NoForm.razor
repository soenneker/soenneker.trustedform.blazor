@page "/no-form"
@using Soenneker.TrustedForm.Blazor
@using Soenneker.TrustedForm.Blazor.Options

<img src="https://user-images.githubusercontent.com/4441470/224455560-91ed3ee7-f510-4041-a8d2-3fc093025112.png" />
<h1>Soenneker.TrustedForm.Blazor demo</h1>
<p>This page demonstrates some of the common usages for the interop library.</p>
<br />

<hr />

<TrustedForm @ref="_trustedFormRef" OnLoad="OnTrustedFormLoaded" Configuration="_trustedFormConfig" ></TrustedForm>

<button @onclick="GetCertUrl" class="btn btn-primary" >Get TrustedForm Cert URL</button>
<button @onclick="StopTrustedForm" class="btn btn-danger ms-2" >Stop TrustedForm Recording</button>

@if (_certUrl != null)
{
    <div class="alert alert-success mt-3" >
        <b>TrustedForm Cert URL:</b>
        <div style="word-break: break-all;" >@_certUrl</div>
    </div>
}
@if (_trustedFormStopped)
{
    <div class="alert alert-warning mt-3" >
        <b>TrustedForm recording has been stopped.</b>
    </div>
}

<hr />

@code{
    private TrustedForm? _trustedFormRef;
    private readonly TrustedFormConfiguration _trustedFormConfig = new() { IncludeForm = true };
    private string? _certUrl;
    private bool _trustedFormLoaded;
    private bool _trustedFormStopped;

    private async Task StopTrustedForm()
    {
        if (_trustedFormRef is not null)
        {
            await _trustedFormRef.Stop();
            _trustedFormStopped = true;
            StateHasChanged();
        }
    }

    private void OnTrustedFormLoaded()
    {
        _trustedFormLoaded = true;
        _certUrl = null;
        _trustedFormStopped = false;
        StateHasChanged();
    }

    private async Task GetCertUrl()
    {
        if (_trustedFormRef is not null)
        {
            _certUrl = await _trustedFormRef.GetCertUrl();
            StateHasChanged();
        }
    }
}